/*
 * npm 빌드 추가 확인
plugins {
    id "com.moowork.node" version "1.2.0"
}

node {
    version = '9.3.0'
    npmVersion = '5.8.0'
    download = true
}

task npmBuild(type: NpmTask) {
    args = ['run', 'build']
}

task npmClean(type: Delete) {
    delete 'main/resources/static'
}

npmBuild.dependsOn(npmInstall)

task resourcesCopy(dependsOn: ':web.front.vue:npmBuild') {
    doLast {
        // copy template
        copy {
            from '../web.front/src/main/resources/index.html'
            into 'main/resources/static/templates'
        }
        // copy static
        copy {
            from '../web.front/src/main/resources/static'
            into 'main/resources/static'
        }
    }
}
*/

bootJar{
    enabled = false;
}
jar {
    enabled = true;
}

ext {
    springfoxVersion = '2.9.2'
}

repositories {
    mavenCentral()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}

apply plugin: 'com.ewerk.gradle.plugins.querydsl'

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation "io.springfox:springfox-swagger2:${springfoxVersion}"
    implementation "io.springfox:springfox-swagger-ui:${springfoxVersion}"
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'
    implementation 'com.querydsl:querydsl-jpa'
    implementation 'com.querydsl:querydsl-apt'
    compile 'org.json:json:20190722'
    compile group: 'org.springframework.security.oauth', name: 'spring-security-oauth2', version: '2.4.0.RELEASE'
    compile group: 'org.springframework.security', name: 'spring-security-jwt', version: '1.1.0.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
}

def querydslSrcDir = 'src/querydsl/java'

querydsl {
    library = "com.querydsl:querydsl-apt"
    jpa = true
    querydslSourcesDir = querydslSrcDir
}

compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}

configurations {
    querydsl.extendsFrom compileClasspath
}

sourceSets {
    main {
        java {
            srcDir querydslSrcDir
        }
    }
}
